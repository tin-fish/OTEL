receivers:
  otlp:
    protocols:
      grpc:
        endpoint: "0.0.0.0:4317"
  prometheus/internal:
    config:
      scrape_configs:
        - job_name: self
          scrape_interval: 60s
          static_configs:
            - targets: [ localhost:8888 ]
  prometheus:
    config:
      scrape_configs:
        - job_name: node
          scrape_interval: 60s
          static_configs:
            - targets: ['node_exporter:9100']
  hostmetrics:
    collection_interval: 60s
    scrapers:
      cpu:
      memory: 
extensions:
  health_check:

processors:
  batch:
  memory_limiter:
    check_interval: 60s
    limit_mib: 400
    spike_limit_mib: 100
  resource:
    attributes:
      - key: tinfishkey
        value: ok
        action: upsert
  resourcedetection:
    detectors: [docker, env, system]
    timeout: 2s
    override: true
exporters:
  debug:
    verbosity: Detailed
  signalfx:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    api_url: "https://api.${SPLUNK_REALM}.signalfx.com"
    ingest_url: https://ingest.${SPLUNK_REALM}.signalfx.com
    sync_host_metadata: true
  sapm:
    access_token: "${SPLUNK_ACCESS_TOKEN}"
    endpoint: https://ingest.${SPLUNK_REALM}.signalfx.com/v2/trace

service:
  extensions: [health_check]
  pipelines:
    metrics:
      receivers: [prometheus/internal, prometheus, hostmetrics, otlp]
      processors: [batch, resourcedetection, resource]
      exporters: [signalfx]
    traces:
      receivers: [otlp]
      processors: [batch, memory_limiter]
      exporters: [sapm]
  telemetry:
    metrics:
      address: localhost:8888

